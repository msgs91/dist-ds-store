group 'dist-ds-store'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

version '0.0'
sourceCompatibility = 1.8

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

repositories {
    mavenCentral()
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dependencies {
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.25.1'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.25.1'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: '2.25.1'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.25.1'
    compile group: 'org.glassfish.jersey.ext', name: 'jersey-bean-validation', version: '2.25.1'

    compile group: 'com.google.guava', name: 'guava', version: '24.1.1-jre'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.22'
    compile "org.slf4j:slf4j-api:1.7.12"
    compile "org.apache.logging.log4j:log4j-core:2.7"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.7"

    testCompile "org.mockito:mockito-core:2.+"
    testCompile 'io.rest-assured:rest-assured:3.1.0'
    testCompile group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-jetty', version: '2.25.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar {
    manifest {
//        attributes 'Implementation-Title': 'Schema Registry', 'Implementation-Version': 1
        attributes 'Main-class' : 'house.App'
    }
}

task makeZip(type: Zip, dependsOn: jar) {
    into('lib') {
        from configurations.runtime
        from jar.archivePath
    }
    into('conf') {
        from "src/main/conf"
    }
    into('bin') {
        from "src/main/scripts"
    }
}

task copyJarToBin(type: Copy) {
    from "${buildDir}/libs"
    into "${project.projectDir}/../bin/"
}

build.dependsOn makeZip
build.dependsOn shadowJar
build.dependsOn copyJarToBin